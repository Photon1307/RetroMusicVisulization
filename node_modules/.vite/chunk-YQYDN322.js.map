{
  "version": 3,
  "sources": ["../three/examples/jsm/lines/LineSegmentsGeometry.js", "../three/examples/jsm/lines/LineGeometry.js"],
  "sourcesContent": ["import {\n\tBox3,\n\tFloat32BufferAttribute,\n\tInstancedBufferGeometry,\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tSphere,\n\tVector3,\n\tWireframeGeometry\n} from 'three';\n\nconst _box = new Box3();\nconst _vector = new Vector3();\n\nclass LineSegmentsGeometry extends InstancedBufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineSegmentsGeometry';\n\n\t\tconst positions = [ - 1, 2, 0, 1, 2, 0, - 1, 1, 0, 1, 1, 0, - 1, 0, 0, 1, 0, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\t\tconst uvs = [ - 1, 2, 1, 2, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 2, 1, - 2 ];\n\t\tconst index = [ 0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5 ];\n\n\t\tthis.setIndex( index );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst start = this.attributes.instanceStart;\n\t\tconst end = this.attributes.instanceEnd;\n\n\t\tif ( start !== undefined ) {\n\n\t\t\tstart.applyMatrix4( matrix );\n\n\t\t\tend.applyMatrix4( matrix );\n\n\t\t\tstart.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetPositions( array ) {\n\n\t\tlet lineSegments;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tlineSegments = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tlineSegments = new Float32Array( array );\n\n\t\t}\n\n\t\tconst instanceBuffer = new InstancedInterleavedBuffer( lineSegments, 6, 1 ); // xyz, xyz\n\n\t\tthis.setAttribute( 'instanceStart', new InterleavedBufferAttribute( instanceBuffer, 3, 0 ) ); // xyz\n\t\tthis.setAttribute( 'instanceEnd', new InterleavedBufferAttribute( instanceBuffer, 3, 3 ) ); // xyz\n\n\t\t//\n\n\t\tthis.computeBoundingBox();\n\t\tthis.computeBoundingSphere();\n\n\t\treturn this;\n\n\t}\n\n\tsetColors( array ) {\n\n\t\tlet colors;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tcolors = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tcolors = new Float32Array( array );\n\n\t\t}\n\n\t\tconst instanceColorBuffer = new InstancedInterleavedBuffer( colors, 6, 1 ); // rgb, rgb\n\n\t\tthis.setAttribute( 'instanceColorStart', new InterleavedBufferAttribute( instanceColorBuffer, 3, 0 ) ); // rgb\n\t\tthis.setAttribute( 'instanceColorEnd', new InterleavedBufferAttribute( instanceColorBuffer, 3, 3 ) ); // rgb\n\n\t\treturn this;\n\n\t}\n\n\tfromWireframeGeometry( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\n\t\treturn this;\n\n\t}\n\n\tfromEdgesGeometry( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\n\t\treturn this;\n\n\t}\n\n\tfromMesh( mesh ) {\n\n\t\tthis.fromWireframeGeometry( new WireframeGeometry( mesh.geometry ) );\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t}\n\n\tfromLineSegments( lineSegments ) {\n\n\t\tconst geometry = lineSegments.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.LineSegmentsGeometry no longer supports Geometry. Use THREE.BufferGeometry instead.' );\n\t\t\treturn;\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.attributes.position.array ); // assumes non-indexed\n\n\t\t}\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst start = this.attributes.instanceStart;\n\t\tconst end = this.attributes.instanceEnd;\n\n\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( start );\n\n\t\t\t_box.setFromBufferAttribute( end );\n\n\t\t\tthis.boundingBox.union( _box );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tconst start = this.attributes.instanceStart;\n\t\tconst end = this.attributes.instanceEnd;\n\n\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\tthis.boundingBox.getCenter( center );\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = start.count; i < il; i ++ ) {\n\n\t\t\t\t_vector.fromBufferAttribute( start, i );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector ) );\n\n\t\t\t\t_vector.fromBufferAttribute( end, i );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector ) );\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\t// todo\n\n\t}\n\n\tapplyMatrix( matrix ) {\n\n\t\tconsole.warn( 'THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4().' );\n\n\t\treturn this.applyMatrix4( matrix );\n\n\t}\n\n}\n\nLineSegmentsGeometry.prototype.isLineSegmentsGeometry = true;\n\nexport { LineSegmentsGeometry };\n", "import { LineSegmentsGeometry } from '../lines/LineSegmentsGeometry.js';\n\nclass LineGeometry extends LineSegmentsGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\t\tthis.type = 'LineGeometry';\n\n\t}\n\n\tsetPositions( array ) {\n\n\t\t// converts [ x1, y1, z1,  x2, y2, z2, ... ] to pairs format\n\n\t\tvar length = array.length - 3;\n\t\tvar points = new Float32Array( 2 * length );\n\n\t\tfor ( var i = 0; i < length; i += 3 ) {\n\n\t\t\tpoints[ 2 * i ] = array[ i ];\n\t\t\tpoints[ 2 * i + 1 ] = array[ i + 1 ];\n\t\t\tpoints[ 2 * i + 2 ] = array[ i + 2 ];\n\n\t\t\tpoints[ 2 * i + 3 ] = array[ i + 3 ];\n\t\t\tpoints[ 2 * i + 4 ] = array[ i + 4 ];\n\t\t\tpoints[ 2 * i + 5 ] = array[ i + 5 ];\n\n\t\t}\n\n\t\tsuper.setPositions( points );\n\n\t\treturn this;\n\n\t}\n\n\tsetColors( array ) {\n\n\t\t// converts [ r1, g1, b1,  r2, g2, b2, ... ] to pairs format\n\n\t\tvar length = array.length - 3;\n\t\tvar colors = new Float32Array( 2 * length );\n\n\t\tfor ( var i = 0; i < length; i += 3 ) {\n\n\t\t\tcolors[ 2 * i ] = array[ i ];\n\t\t\tcolors[ 2 * i + 1 ] = array[ i + 1 ];\n\t\t\tcolors[ 2 * i + 2 ] = array[ i + 2 ];\n\n\t\t\tcolors[ 2 * i + 3 ] = array[ i + 3 ];\n\t\t\tcolors[ 2 * i + 4 ] = array[ i + 4 ];\n\t\t\tcolors[ 2 * i + 5 ] = array[ i + 5 ];\n\n\t\t}\n\n\t\tsuper.setColors( colors );\n\n\t\treturn this;\n\n\t}\n\n\tfromLine( line ) {\n\n\t\tvar geometry = line.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.LineGeometry no longer supports Geometry. Use THREE.BufferGeometry instead.' );\n\t\t\treturn;\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.attributes.position.array ); // assumes non-indexed\n\n\t\t}\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineGeometry.prototype.isLineGeometry = true;\n\nexport { LineGeometry };\n"],
  "mappings": "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",
  "names": []
}
